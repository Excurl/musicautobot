# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"default_config": "config.ipynb",
         "music_config": "config.ipynb",
         "musicm_config": "config.ipynb",
         "multitask_config": "config.ipynb",
         "multitaskm_config": "config.ipynb",
         "S2SFileProcessor": "dataloader.ipynb",
         "S2SPartsProcessor": "dataloader.ipynb",
         "Midi2MultitrackProcessor": "dataloader.ipynb",
         "S2SPreloader": "dataloader.ipynb",
         "rand_transpose_value": "dataloader.ipynb",
         "S2SItemList": "dataloader.ipynb",
         "mask_tfm": "dataloader.ipynb",
         "mask_lm_tfm_default": "dataloader.ipynb",
         "mask_lm_tfm_pitchdur": "dataloader.ipynb",
         "mask_lm_tfm": "dataloader.ipynb",
         "melody_chord_tfm": "dataloader.ipynb",
         "multitask_model_learner": "learner.ipynb",
         "MultitaskLearner": "learner.ipynb",
         "nw_predict_from_midi": "learner.ipynb",
         "s2s_predict_from_midi": "learner.ipynb",
         "mask_predict_from_midi": "learner.ipynb",
         "MultiLoss": "learner.ipynb",
         "acc_ignore_pad": "learner.ipynb",
         "acc_index": "learner.ipynb",
         "mask_acc": "learner.ipynb",
         "lm_acc": "learner.ipynb",
         "c2m_acc": "learner.ipynb",
         "m2c_acc": "learner.ipynb",
         "AverageMultiMetric": "learner.ipynb",
         "MTTrainer": "learner.ipynb",
         "dropout_mask": "model.ipynb",
         "RNNDropout": "model.ipynb",
         "PositionalEncoding": "model.ipynb",
         "GeLU": "model.ipynb",
         "Swish": "model.ipynb",
         "feed_forward": "model.ipynb",
         "init_transformer": "model.ipynb",
         "Activation": "model.ipynb",
         "tfmer_lm_config": "model.ipynb",
         "tfmer_clas_config": "model.ipynb",
         "MultitrackItem": "transform.ipynb",
         "combine2chordarr": "transform.ipynb",
         "Midi2ItemTfm": "dataloader.ipynb",
         "MusicItemTfm": "dataloader.ipynb",
         "mi2tensor": "dataloader.ipynb",
         "rand_transpose": "dataloader.ipynb",
         "batch_position_tfm": "dataloader.ipynb",
         "MusicLearner": "learner.ipynb",
         "predict_from_midi": "learner.ipynb",
         "filter_invalid_indexes": "learner.ipynb",
         "MusicTransformerXL": "model.ipynb",
         "BeatPositionEncoder": "model.ipynb",
         "MusicItem": "transform.ipynb",
         "pad_seq": "transform.ipynb",
         "to_tensor": "transform.ipynb",
         "midi2idxenc": "transform.ipynb",
         "idxenc2stream": "transform.ipynb",
         "npenc2idxenc": "transform.ipynb",
         "seq_prefix": "transform.ipynb",
         "idxenc2npenc": "transform.ipynb",
         "to_valid_idxenc": "transform.ipynb",
         "to_valid_npenc": "transform.ipynb",
         "position_enc": "transform.ipynb",
         "beat2index": "transform.ipynb",
         "find_beat": "transform.ipynb",
         "tfm_transpose": "transform.ipynb",
         "trim_to_beat": "transform.ipynb",
         "mask_input": "transform.ipynb",
         "mask_section": "transform.ipynb",
         "SEQType": "transform.ipynb",
         "BPB": "numpy_encode.ipynb",
         "TIMESIG": "numpy_encode.ipynb",
         "PIANO_RANGE": "midifile.ipynb",
         "VALTSEP": "numpy_encode.ipynb",
         "VALTCONT": "numpy_encode.ipynb",
         "SAMPLE_FREQ": "numpy_encode.ipynb",
         "NOTE_SIZE": "numpy_encode.ipynb",
         "DUR_SIZE": "numpy_encode.ipynb",
         "MAX_NOTE_DUR": "numpy_encode.ipynb",
         "midi2npenc": "numpy_encode.ipynb",
         "npenc2stream": "numpy_encode.ipynb",
         "file2stream": "numpy_encode.ipynb",
         "stream2chordarr": "numpy_encode.ipynb",
         "chordarr2npenc": "numpy_encode.ipynb",
         "timestep2npenc": "numpy_encode.ipynb",
         "npenc2chordarr": "numpy_encode.ipynb",
         "npenc_len": "numpy_encode.ipynb",
         "chordarr2stream": "numpy_encode.ipynb",
         "partarr2stream": "numpy_encode.ipynb",
         "part_append_duration_notes": "numpy_encode.ipynb",
         "group_notes_by_duration": "numpy_encode.ipynb",
         "is_valid_npenc": "numpy_encode.ipynb",
         "remove_overlaps": "numpy_encode.ipynb",
         "separate_melody_chord": "numpy_encode.ipynb",
         "compress_chordarr": "numpy_encode.ipynb",
         "trim_chordarr_rests": "numpy_encode.ipynb",
         "shorten_chordarr_rests": "numpy_encode.ipynb",
         "stream2npenc_parts": "numpy_encode.ipynb",
         "chordarr_combine_parts": "numpy_encode.ipynb",
         "pad_part_to": "numpy_encode.ipynb",
         "part_enc": "numpy_encode.ipynb",
         "avg_tempo": "numpy_encode.ipynb",
         "avg_pitch": "numpy_encode.ipynb",
         "window_mask": "attention_mask.ipynb",
         "rand_window_mask": "attention_mask.ipynb",
         "lm_mask": "attention_mask.ipynb",
         "setup_musescore": "env_setup.ipynb",
         "is_ipython": "env_setup.ipynb",
         "is_colab": "env_setup.ipynb",
         "setup_fluidsynth": "env_setup.ipynb",
         "play_wav": "env_setup.ipynb",
         "process_all": "file_processing.ipynb",
         "process_file": "file_processing.ipynb",
         "arr2csv": "file_processing.ipynb",
         "format_values": "file_processing.ipynb",
         "Lamb": "lamb.ipynb",
         "Track": "midifile.ipynb",
         "file2mf": "midifile.ipynb",
         "mf2stream": "midifile.ipynb",
         "is_empty_midi": "midifile.ipynb",
         "num_piano_tracks": "midifile.ipynb",
         "is_channel": "midifile.ipynb",
         "track_sort": "midifile.ipynb",
         "is_piano_note": "midifile.ipynb",
         "unique_track_notes": "midifile.ipynb",
         "compress_midi_file": "midifile.ipynb",
         "get_track_type": "midifile.ipynb",
         "get_track_instrument": "midifile.ipynb",
         "change_track_instrument": "midifile.ipynb",
         "print_music21_instruments": "midifile.ipynb",
         "PIANO_TYPES": "midifile.ipynb",
         "PLUCK_TYPES": "midifile.ipynb",
         "BRIGHT_TYPES": "midifile.ipynb",
         "type2inst": "midifile.ipynb",
         "INFO_TYPES": "midifile.ipynb",
         "StackedDataBunch": "stacked_dataloader.ipynb",
         "StackedDataset": "stacked_dataloader.ipynb",
         "StackedDataloader": "stacked_dataloader.ipynb",
         "top_k_top_p": "top_k_top_p.ipynb",
         "MusicVocab": "vocab.ipynb",
         "BOS": "vocab.ipynb",
         "PAD": "vocab.ipynb",
         "EOS": "vocab.ipynb",
         "MASK": "vocab.ipynb",
         "CSEQ": "vocab.ipynb",
         "MSEQ": "vocab.ipynb",
         "S2SCLS": "vocab.ipynb",
         "NSCLS": "vocab.ipynb",
         "SEP": "vocab.ipynb",
         "SPECIAL_TOKS": "vocab.ipynb",
         "NOTE_TOKS": "vocab.ipynb",
         "DUR_TOKS": "vocab.ipynb",
         "MTEMPO_SIZE": "vocab.ipynb",
         "MTEMPO_OFF": "vocab.ipynb",
         "MTEMPO_TOKS": "vocab.ipynb"}

modules = ["config.py",
           "multitask_transformer/dataloader.py",
           "multitask_transformer/learner.py",
           "multitask_transformer/model.py",
           "multitask_transformer/transform.py",
           "music_transformer/dataloader.py",
           "music_transformer/learner.py",
           "music_transformer/model.py",
           "music_transformer/transform.py",
           "numpy_encode.py",
           "utils/attention_mask.py",
           "utils/env_setup.py",
           "utils/file_processing.py",
           "utils/lamb.py",
           "utils/midifile.py",
           "utils/stacked_dataloader.py",
           "utils/top_k_top_p.py",
           "vocab.py"]

doc_url = "https://bearpelican.github.io/musicautobot/"

git_url = "https://github.com/bearpelican/musicautobot/tree/master/"

def custom_doc_links(name): return None
